{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Track &amp; Graph","text":"<p>Welcome to the Track &amp; Graph docs site. </p> <p>To get started learning about Track &amp; Graph take a look at the tutorial.</p> <p>You can also check out the project on GitHub or the Google Play Store.</p>"},{"location":"lua/community/","title":"Community Scripts","text":""},{"location":"lua/community/#line-graphs","title":"Line Graphs","text":"<ul> <li>Merge Inputs: Plots all provided data sources in a single line where all datapoints are sorted by their timestamp.</li> <li>Cumulative: Generates a cumulative line graph from the provided data sources.</li> <li>Difference: Generates a line graph that shows the difference between each tracked value from the previous value for each provided data source.</li> </ul>"},{"location":"lua/community/#bar-charts","title":"Bar Charts","text":"<ul> <li>Cumulative: Generates a cumulative bar chart from the provided data source.</li> <li>Merge Inputs: Plots all provided data sources in a single bar chart where all data points are sorted by their timestamp.</li> </ul>"},{"location":"lua/community/#text","title":"Text","text":"<ul> <li>Total this period: Displays the total value of from the provided data sources in the given period e.g. the total this week.</li> <li>Fraction: Displays a fraction representing the ratio of values with specified labels to total values. </li> </ul>"},{"location":"lua/community/#datapoint","title":"Datapoint","text":"<ul> <li>Last Value Above Threshold: Returns the last datapoint with a value above a given threshold. It can accept multiple data sources.</li> <li>Last Value Below Threshold: Returns the last datapoint with a value below a given threshold. It can accept multiple data sources.</li> </ul>"},{"location":"lua/community/#pie-charts","title":"Pie Charts","text":"<ul> <li>Moving Pie Chart: Merges all given data sources into one pie chart including all data, or all data in the given period prior to now.</li> <li>Periodic Pie Chart: Displays data for a specific time period such as the current day, week, month, etc. The pie chart resets at the beginning of each new period and accumulates data throughout that period. This script can accept multiple data sources and merges them all into one pie chart.</li> </ul>"},{"location":"lua/community/bar-charts/cumulative/","title":"Cumulative Bar Chart Script","text":"<p>This script expects a single data source and generates a cumulative bar chart.</p>"},{"location":"lua/community/bar-charts/cumulative/#configuration","title":"Configuration","text":"<p>This script accepts the following configuration parameters:</p> <pre><code>local core = require(\"tng.core\")\nlocal graph = require(\"tng.graph\")\n-- Optional period of data to be displayed e.g. core.PERIOD.WEEK to only show 1 week of data\nlocal period = nil\n-- Optional integer value used with period e.g. 5\nlocal period_multiplier = nil\n-- If from_now is false the end of the graph will be the last datapoint, otherwise it's the current date/time\nlocal from_now = false\n-- Totalling period used to calculate 'plot totals'\nlocal totalling_period = core.PERIOD.DAY\n-- Optional boolean to count by label. If true, each datapoint counts as 1, and the value is ignored\nlocal count_by_label = false\n-- Optional totalling period multiplier used to calculate 'plot totals' e.g. 2\nlocal totalling_period_multiplier = nil\n-- Optional colors list, e.g. { label: \"#FF00FF\", label2: \"#0000FF\", label3: core.COLOR.BLUE_SKY }\nlocal label_colors = nil\n-- Optional if the y axis represents time\nlocal duration_based_range = false\n-- Optional max for the y axis e.g. 100\nlocal y_max = nil\n</code></pre> <p>Install via deeplink</p> <p>Read the full script</p> <p>Author: SamAmco</p>"},{"location":"lua/community/bar-charts/merge-inputs/","title":"Merge Inputs","text":"<p>Plots all provided data sources in a single bar chart where all data points are sorted by their timestamp.</p>"},{"location":"lua/community/bar-charts/merge-inputs/#configuration","title":"Configuration","text":"<p>This script accepts the following configuration parameters:</p> <pre><code>local core = require(\"tng.core\")\nlocal graph = require(\"tng.graph\")\n-- Optional period of data to be displayed e.g. core.PERIOD.WEEK to only show 1 week of data\nlocal period = nil\n-- Optional integer value used with period e.g. 5\nlocal period_multiplier = nil\n-- If from_now is false the end of the graph will be the last datapoint, otherwise it's the current date/time\nlocal from_now = false\n-- Totalling period used to calculate 'plot totals'\nlocal totalling_period = core.PERIOD.DAY\n-- Optional totalling period multiplier used to calculate 'plot totals' e.g. 2\nlocal totalling_period_multiplier = nil\n-- Optional boolean to count by label. If true, each datapoint counts as 1, and the value is ignored\nlocal count_by_label = false\n-- Optional colors list, e.g. { label: \"#FF00FF\", label2: \"#0000FF\", label3: core.COLOR.BLUE_SKY }\nlocal label_colors = nil\n-- Optional if the y axis represents time\nlocal duration_based_range = false\n-- Optional max for the y axis e.g. 100\nlocal y_max = nil\n</code></pre> <p>Install via deeplink</p> <p>Read the full script</p> <p>Author: SamAmco</p>"},{"location":"lua/community/datapoint/last-value-above-threshold/","title":"Last Value Above Threshold","text":"<p>This script returns the last datapoint with a value above a given threshold. It can accept multiple data sources.</p>"},{"location":"lua/community/datapoint/last-value-above-threshold/#configuration","title":"Configuration","text":"<p>This script accepts the following configuration parameters:</p> <pre><code>-- The threshold above which the last value is returned\nlocal threshold = 0\n</code></pre> <p>Install via deeplink</p> <p>Read the full script</p> <p>Author: SamAmco</p>"},{"location":"lua/community/datapoint/last-value-below-threshold/","title":"Last Value Below Threshold","text":"<p>This script returns the last datapoint with a value below a given threshold. It can accept multiple data sources.</p>"},{"location":"lua/community/datapoint/last-value-below-threshold/#configuration","title":"Configuration","text":"<p>This script accepts the following configuration parameters:</p> <pre><code>-- The threshold below which the last value is returned\nlocal threshold = 0\n</code></pre> <p>Install via deeplink</p> <p>Read the full script</p> <p>Author: SamAmco</p>"},{"location":"lua/community/line-graphs/cumulative/","title":"Cumulative Line Graph Script","text":"<p>This script generates a cumulative line graph for each of the provided data sources.</p>"},{"location":"lua/community/line-graphs/cumulative/#configuration","title":"Configuration","text":"<p>This script accepts the following configuration parameters:</p> <pre><code>local core = require(\"tng.core\")\nlocal graph = require(\"tng.graph\")\n-- Optional period of data to be displayed e.g. core.PERIOD.WEEK to only show 1 week of data\nlocal period = nil\n-- Optional integer value used with period e.g. 5\nlocal period_multiplier = 8\n-- If from_now is false the end of the graph will be the last datapoint, otherwise it's the current date/time\nlocal from_now = false\n-- Optional colors list, e.g. {\"#FF00FF\", \"#0000FF\", core.COLOR.BLUE_SKY}\nlocal line_colors = nil\n-- Optional point style e.g. graph.LINE_POINT_STYLE.CIRCLE\nlocal line_point_style = nil\n-- Optional string labels for the lines in the legend, e.g. [\"My data 1\", \"My data 2\"]\nlocal line_labels = nil\n-- Optional integer value used to average data points over a certain duration e.g. core.DURATION.DAY * 30 for a 30 day moving average\nlocal averaging_duration = nil\n-- Optional totalling period used to calculate 'plot totals' e.g. core.PERIOD.WEEK\nlocal totalling_period = nil\n-- Optional totalling period multiplier used to calculate 'plot totals' e.g. 2\nlocal totalling_period_multiplier = nil\n-- Optional if the y axis represents time\nlocal duration_based_range = false\n-- Optional bounds for the y axis e.g. { min = 0, max = 100 }\nlocal range_bounds = nil\n</code></pre> <p>Install via deeplink</p> <p>Read the full script</p> <p>Author: SamAmco</p>"},{"location":"lua/community/line-graphs/difference/","title":"Difference Graph","text":"<p>This script generates a line graph that shows the difference between each tracked value from the previous value for each provided data source.</p>"},{"location":"lua/community/line-graphs/difference/#configuration","title":"Configuration","text":"<p>This script accepts the following configuration parameters:</p> <pre><code>local core = require(\"tng.core\")\nlocal graph = require(\"tng.graph\")\n-- Optional period of data to be displayed e.g. core.PERIOD.WEEK to only show 1 week of data\nlocal period = nil\n-- Optional integer value used with period e.g. 5\nlocal period_multiplier = 8\n-- If from_now is false the end of the graph will be the last datapoint, otherwise it's the current date/time\nlocal from_now = false\n-- Optional colors list, e.g. {\"#FF00FF\", \"#0000FF\", core.COLOR.BLUE_SKY}\nlocal line_colors = nil\n-- Optional point style e.g. graph.LINE_POINT_STYLE.CIRCLE\nlocal line_point_style = nil\n-- Optional string labels for the lines in the legend, e.g. [\"My data 1\", \"My data 2\"]\nlocal line_labels = nil\n-- Optional integer value used to average data points over a certain duration e.g. core.DURATION.DAY * 30 for a 30 day moving average\nlocal averaging_duration = nil\n-- Optional totalling period used to calculate 'plot totals' e.g. core.PERIOD.WEEK\nlocal totalling_period = nil\n-- Optional totalling period multiplier used to calculate 'plot totals' e.g. 2\nlocal totalling_period_multiplier = nil\n-- Optional if the y axis represents time\nlocal duration_based_range = false\n-- Optional bounds for the y axis e.g. { min = 0, max = 100 }\nlocal range_bounds = nil\n</code></pre> <p>Install via deeplink</p> <p>Read the full script</p> <p>Author: SamAmco</p>"},{"location":"lua/community/line-graphs/merge-inputs/","title":"Merge Inputs","text":"<p>Plots all provided data sources in a single line where all datapoints are sorted by their timestamp.</p>"},{"location":"lua/community/line-graphs/merge-inputs/#configuration","title":"Configuration","text":"<p>This script accepts the following configuration parameters:</p> <pre><code>-- Optional period of data to be displayed e.g. core.PERIOD.WEEK to only show 1 week of data\nlocal period = nil\n-- Optional integer value used with period e.g. 5\nlocal period_multiplier = 8\n-- If from_now is false the end of the graph will be the last datapoint, otherwise it's the current date/time\nlocal from_now = false\n-- Optional color, e.g. \"#FF00FF\" or core.COLOR.BLUE_SKY\nlocal line_color = nil\n-- Optional point style e.g. graph.LINE_POINT_STYLE.CIRCLE\nlocal line_point_style = nil\n-- Optional string label for the line in the legend, e.g. \"Data\"\nlocal line_label = nil\n-- Optional integer value used to average data points over a certain duration e.g. core.DURATION.DAY * 30 for a 30 day moving average\nlocal averaging_duration = nil\n-- Optional totalling period used to calculate 'plot totals' e.g. core.PERIOD.WEEK\nlocal totalling_period = nil\n-- Optional totalling period multiplier used to calculate 'plot totals' e.g. 2\nlocal totalling_period_multiplier = nil\n</code></pre> <p>Install via deeplink</p> <p>Read the full script</p> <p>Author: SamAmco</p>"},{"location":"lua/community/pie-charts/moving-pie-chart/","title":"Moving Pie Chart","text":"<p>A pie chart that merges all given data sources into one pie chart including all data, or all data in the given period prior to now.</p>"},{"location":"lua/community/pie-charts/moving-pie-chart/#configuration","title":"Configuration","text":"<p>This script accepts the following configuration parameters:</p> <pre><code>local period = nil\n-- Optional integer value used with period e.g. 5\nlocal period_multiplier = nil\n-- Optional colors list, e.g. { label: \"#FF00FF\", label2: \"#0000FF\", label3: core.COLOR.BLUE_SKY }\nlocal label_colors = nil\n-- Boolean to count by label. If true, each datapoint counts as 1, and the value is ignored\nlocal count_by_label = false\n</code></pre> <p>Install via deeplink</p> <p>Read the full script</p> <p>Author: SamAmco</p>"},{"location":"lua/community/pie-charts/periodic-pie-chart/","title":"Periodic Pie Chart","text":"<p>A pie chart that displays data for a specific time period such as the current day, week, month, etc. The pie chart resets at the beginning of each new period and accumulates data throughout that period. This script can accept multiple data sources and merges them all into one pie chart.</p>"},{"location":"lua/community/pie-charts/periodic-pie-chart/#configuration","title":"Configuration","text":"<p>This script accepts the following configuration parameters:</p> <pre><code>-- Period of data to be displayed e.g. core.PERIOD.WEEK to show data for this week\nlocal period = core.PERIOD.WEEK\n-- Optional colors list, e.g. { label=\"#FF00FF\", label2=\"#0000FF\", label3=core.COLOR.BLUE_SKY }\nlocal label_colors = nil\n-- Boolean to count by label. If true, each datapoint counts as 1, and the value is ignored\nlocal count_by_label = false\n</code></pre> <p>Install via deeplink</p> <p>Read the full script</p> <p>Author: SamAmco</p>"},{"location":"lua/community/text/fraction/","title":"Fraction Text Display","text":"<p>This script displays a fraction representing the ratio of values with specified labels to total values. </p>"},{"location":"lua/community/text/fraction/#configuration","title":"Configuration","text":"<p>This script accepts the following configuration parameters:</p> <pre><code>-- Optional period of data to be displayed e.g. core.PERIOD.WEEK to show data for this week\nlocal period = nil\n-- Optional integer value used with period e.g. 5\nlocal period_multiplier = nil\n-- Optional boolean to count by label. If true, each datapoint counts as 1, and the value is ignored\nlocal count_by_label = false\n-- Optional fixed denominator value e.g. 100\nlocal fixed_denominator = nil\n-- The list of labels to be counted as part of the numerator\nlocal numerator_labels = {}\n-- A list of labels to be ignored i.e. not counted as part of the numerator or denominator\nlocal ignored_labels = nil\n</code></pre> <p>Install via deeplink</p> <p>Read the full script</p> <p>Author: SamAmco</p>"},{"location":"lua/community/text/total-this-period/","title":"Total this period","text":"<p>Shows the total of a given input over a specified period of time. For example, the total this week (Monday to Sunday) or the total this month. If multiple data sources are given then the total of each data source is shown separately, as well as the overall total.</p>"},{"location":"lua/community/text/total-this-period/#configuration","title":"Configuration","text":"<p>This script accepts the following configuration parameters:</p> <pre><code>-- Period of data to be displayed e.g. core.PERIOD.WEEK to show data for this week\nlocal period = core.PERIOD.WEEK\n</code></pre> <p>Install via deeplink</p> <p>Read the full script</p> <p>Author: SamAmco</p>"},{"location":"lua/developer-guide/intro/","title":"Intro","text":"<p>Lua was chosen because it is fast, relatively expressive, and it has a very low embedding cost (it doesn't add much to the apps runtime requirements or download size).</p> <p>You may notice that only the configuration parameters of the script are immediately visible.</p> <p>TODO insert image</p> <p>This is because by convention the only part of the script that is shown is the part between the following two lines:</p> <pre><code>--- PREVIEW_START\n</code></pre> <p>and </p> <pre><code>--- PREVIEW_END\n</code></pre>"},{"location":"tutorial/","title":"Tutorial","text":"<p>The tutorials will guide you on how to use Track &amp; Graph step by step.</p> <ul> <li>Get started with tracking</li> <li>Importing and exporting data</li> <li>Creating graphs<ul> <li>Line graphs</li> <li>Pie charts</li> <li>Statistics</li> <li>Time histograms</li> <li>Bar charts</li> <li>Lua graphs</li> </ul> </li> <li>Notes</li> <li>Timestamps</li> </ul>"},{"location":"tutorial/import-export/","title":"Importing and exporting","text":""},{"location":"tutorial/import-export/#csv-import-export","title":"CSV Import &amp; Export","text":"<p>To import/export only the tracked data in a group to a CSV use the menu buttons at the top:</p> <p></p> <p></p> <p>Use this button to import a csv into this group.</p> <p></p> <p>Use this button to export this groups tracked data to a csv.</p>"},{"location":"tutorial/import-export/#backup-restore","title":"Backup &amp; Restore","text":"<p>The Backup &amp; Restore option in the menu is slightly different. This will export and restore the entire database file containing all tracked data, graphs, reminders and notes. </p> <p>It is recommended that you backup your data regularly or configure the auto-backup option.</p> <p>The backup file is an un-encrypted Sqlite3 database file which can also be opened and modified using freely available software. However this is not recommended for non-technical users as you could break the integrity of the database.</p>"},{"location":"tutorial/notes/","title":"Notes","text":"<p>Notes allow you to keep track of qualitative data alongside your quantitative data. There are two types of notes:</p> <ul> <li>Global notes (added directly in the notes menu)</li> <li>Data point notes (attached to specific data points)</li> </ul>"},{"location":"tutorial/notes/#data-point-notes","title":"Data point notes","text":"<p>When adding a data point you may wish to track an important piece of information specific to that data set. For example:</p> <p></p> <p>After adding this note you will notice it shows up in a list underneath any graph of that data set. If you tap the note it will open in a dialog window and a marker will be added to the graph.</p> <p></p>"},{"location":"tutorial/notes/#global-notes","title":"Global notes","text":"<p>However some pieces of information might be relevant to all your data. In this case you can add a global note by tapping the plus button in the global notes menu:</p> <p></p> <p>You will notice this note now shows up underneath all graphs.</p> <p></p>"},{"location":"tutorial/notes/#the-notes-menu","title":"The notes menu","text":"<p>You can edit or delete any note from the notes menu. Deleting a data point note from the notes menu will not delete the data point its self, just the attached note.</p>"},{"location":"tutorial/timestamps/","title":"Timestamps","text":"<p>Sometimes you may notice that a + or - number is appended to your timestamp as in the following:</p> <p></p> <p>This means that this data point was tracked in a different time zone to your current time zone. One common reason for this is that your clock went forward/back for daylight savings. Another reason this might happen is if you tracked the data point in a different country. </p> <p>Essentially what is shown is the time that the clock would have said on your device at the moment you tracked the data point, and then the number of hours you must add or subtract to put it in your current timezone. So if you track a data point in a zone which is 3 hours ahead and then you change your time zone back you will see a (-3) after your data point. </p>"},{"location":"tutorial/tracking/","title":"Get started with tracking","text":"<p>To begin tracking you will need to create a Tracker.</p> <p></p>"},{"location":"tutorial/tracking/#creating-a-tracker","title":"Creating a Tracker","text":"<p>As a minimum you will need to give your tracker a name. You can also optionally add a longer description. The description can later be seen via the context menu of the tracker.</p> <p></p>"},{"location":"tutorial/tracking/#data-point-structure","title":"Data Point Structure","text":"<p>A Tracker holds a list of data points ordered by time. Each data point has the following information:</p> <ul> <li>A timestamp</li> <li>A value </li> <li>An optional label</li> <li>An optional note</li> </ul> <p>The value is usually just a number, but it can also be a time or duration. If you check the box \"This is a time or duration\" you will be asked for values in hours, minutes and seconds and you will be able to start a timer using that tracker. Internally this information is still stored as a number (specifically the total number of seconds tracked).</p> <p>Labels and notes are both text inputs. Labels are useful for categorising data. For example if you wanted to track calories for breakfast, lunch, and dinner, you could track the calories in the value field and the word \"breakfast\", \"lunch\" or \"dinner\" in the label field. Use the note field to add more contextual information like \"Today was my birthday so I ate lots of cake.\"</p> <p></p>"},{"location":"tutorial/tracking/#label-suggestions","title":"Label Suggestions","text":"<p>Any previous labels you have tracked will later appear as buttons on the tracker input dialog. If you press the button the label field is filled with the selected label. If you long press the button a data point is added immediately with that label. Under the advanced tracker settings you can change the behaviour of suggested values slightly. This is explained in more detail further down.</p> <p></p>"},{"location":"tutorial/tracking/#using-groups","title":"Using Groups","text":"<p>Use groups to organise your trackers. You can move a tracker to a group using the trackers context menu:</p> <p></p>"},{"location":"tutorial/tracking/#quick-tracking-groups","title":"Quick Tracking Groups","text":"<p>When you have multiple trackers in a group you can use the quick track button to quickly track them all at once:</p> <p></p>"},{"location":"tutorial/tracking/#reordering-group-items","title":"Reordering Group Items","text":"<p>You can also reorder items in a group by holding down and dragging them: </p> <p></p>"},{"location":"tutorial/tracking/#managing-data-points","title":"Managing Data Points","text":"<p>To view, edit and delete your data points tap on the center of a tracker:</p> <p></p>"},{"location":"tutorial/tracking/#bulk-editing-data-points","title":"Bulk Editing Data Points","text":"<p>You can edit all the data points for a tracker at once using the edit button in the top right. </p> <p>WARNING: It is recommended that you back up your data before doing so as this will change all your data points at once and can not be undone.</p> <p>The \"Where\" section allows you to specify which data points you want to update. Any data points that match any of the input data will be updated. For example if you check value and input 56, then any data point that has a value of 56 will be updated. If you check label and input \"Small\" then any data point with the label \"Small\" will be updated (this is case sensitive so \"Small\" will not match \"small\"). If you check both value and label, then only data points with both the given value and the given label will be updated. </p> <p></p>"},{"location":"tutorial/tracking/#advanced-tracker-options","title":"Advanced tracker options","text":"<p>When creating a tracker you can set a \"default value\" for that tracker. If you do this you will not be asked for a value when you tap the + button. Instead the default value will immediately be tracked at the current time. You can still track a custom value by long pressing the + button on the tracker.</p> <p></p> <p>If you want to change the behaviour of the suggested values you can do so using the suggestions type and order settings. When you tap a suggested value the value and label fields are filled out and the data point is tracked immediately provided you are using the \"Value only\" or \"Value and Label\" suggestion type. Otherwise the dialog will simply fill the label field and allow you to input a value.</p> <p>If you are using \"Value and Label\" or \"Value only\" then long pressing the button will fill out the fields without tracking immediately. If you are using \"Label only\" then long pressing will track the label immediately with a value of 1.</p> <p>By default only previously tracked labels are used to create suggestions and the suggested labels are sorted alphabetically.</p> <p></p>"},{"location":"tutorial/graphs/","title":"Track &amp; Graph - Graphs and Statistics","text":"<p>For help setting graphs please see the tutorial on each graph type below.</p> <ul> <li>Line Graphs</li> <li>Bar Charts</li> <li>Pie Charts</li> <li>Average Time Between and Last Tracked/Time Since</li> <li>Time Histograms</li> <li>Lua Scripts</li> </ul>"},{"location":"tutorial/graphs/bar-charts/","title":"Bar charts","text":"<p>Bar charts in Track &amp; Graph provide a visual representation of how your tracked data fluctuates over time. While they share similarities with line graphs, bar charts offer an additional feature: displaying the ratio of each label, similar to a Pie Chart, within each bar. </p> <p>Let's consider an example where you sell T-Shirts in different sizes: Small, Medium, and Large. Suppose you want to track the daily sales and the distribution of each size. To set up your bar chart select the \"Daily\" option for the bar period like so: </p> <p></p> <p>Now you can create a bar chart like the one below:</p> <p></p>"},{"location":"tutorial/graphs/bar-charts/#configuration","title":"Configuration","text":"<p>If your tracking system assigns a value of 1 for Small, 2 for Medium, and 3 for Large T-Shirts, the bar chart will display the sales of a Large T-Shirt as 3 instead of 1. To rectify this, check the box labeled \"Check here to count the number of data points tracked rather than the total of their values.\" This option ignores the assigned values and counts each data point as 1 on the bar chart.</p> <p>Additionally, you can utilize the scale variable to multiply all the values by a constant factor.</p>"},{"location":"tutorial/graphs/bar-charts/#understanding-the-bar-chart","title":"Understanding the Bar Chart","text":"<p>After creating your bar chart, you can tap on it to view it in full-screen mode. The notes section below the chart displays any relevant notes from the data points used. Tapping on a note highlights the corresponding bar on the chart and shows more detail.</p> <p></p> <p>The labels are ordered such that the label with the highest cumulative value is first (at the bottom of the bar chart) and the label with the smallest cumulative value is last (at the top of the bar chart)</p>"},{"location":"tutorial/graphs/histograms/","title":"Time histograms","text":"<p>Histograms are useful for showing how data is distributed over a given domain. Time histograms in Track &amp; Graph allow you to see how your data is distributed over various time periods.</p> <p>For example imagine you had tracked 7 weeks worth of data on how much time you spent reading. You may wish to know on what days during the week do you typically spend the most time reading. Here you could use a time histogram with the following setup:</p> <p></p> <p>To generate the following histogram:</p> <p></p>"},{"location":"tutorial/graphs/histograms/#how-histograms-are-calculated","title":"How Histograms Are Calculated","text":"<p>The histogram is calculated simply by taking every data point within the sample and adding its value to a bin based on which day of the week that value was tracked. So the day 1 bin represents the total of all data points tracked on Mondays divided by the total of all data points in the sample. Histograms are normalised meaning that the sum of all the heights of the bars (or the area under the graph) should add up to exactly 1. So for example if you only ever read on Fridays you would expect your histogram to only show one bar for Friday with height 1.</p> <p></p> <p>If you read on Saturday 50% of the time and on Friday 50% of the time you would expect your histogram to look like this:</p> <p></p>"},{"location":"tutorial/graphs/histograms/#working-with-labeled-data","title":"Working with Labeled Data","text":"<p>If the data you are tracking has labels then Track &amp; Graph will show you the distribution within each bar of the amount made up by each label tracked like so:</p> <p></p> <p>By default the height of each bar is relative to the sum of all the data point values that fall in that time range. However if the weight of each of your data points should be the same regardless of its value then your histogram may be incorrectly skewed.</p> <p>To fix this you can check the box marked: \"Check here to count the number of data points tracked rather than the total of their values.\"</p> <p>This way each data point will be regarded as having the same weight in the histogram.</p>"},{"location":"tutorial/graphs/histograms/#accuracy-over-time","title":"Accuracy over Time","text":"<p>One final note to bare in mind is that your data may be skewed by the fact that you have not tracked data for each histogram bin yet or have not tracked them all equally yet. So for example if you are drawing a yearly histogram but have only been tracking for 6 months then your histogram may look like this:</p> <p></p> <p>And a year later it may look like this:</p> <p></p> <p>Over time however this skew will tend to 0. Therefore the more data you have tracked the more accurate the histogram will be.</p>"},{"location":"tutorial/graphs/line/","title":"Line graphs","text":""},{"location":"tutorial/graphs/line/#creating-a-line-graph","title":"Creating a Line Graph","text":"<p>To create a line graph use the + icon in a group and create a graph. Select line graph and give your graph a name.</p> <p></p>"},{"location":"tutorial/graphs/line/#time-window-configuration","title":"Time Window Configuration","text":"<p>To control the window of time that this graph will show on the X axis use the Sample size and sample ending at controls. By default line graphs always end at the last data point and will update automatically as you track more data. If you want to fix your graph at a certain point in time you can change \"Sample ending at\" to a custom date. </p> <p></p>"},{"location":"tutorial/graphs/line/#adding-lines-to-your-graph","title":"Adding Lines to Your Graph","text":"<p>Next add one or more lines to your graph by tapping the + bar at the bottom:</p> <p></p> <p>The name at the top will be shown in the graph key, it defaults to the name of the feature. </p> <p>On the left you can select the colour of the line and the style of the line. </p> <p>In the middle there are 3 inputs: </p> <ul> <li>At the top is the feature. If you tap this box you can select a feature, by it's path from the root group to the feature.</li> <li>Next is the averaging period. If you select an averaging period each data point on the line will show as the mean of its self and all data points within the selected period prior. </li> <li>Finally is the plot total setting. This will be explained more below but essentially it will force the line to have a regular distribution of points on the X axis and will use the sum of all data points in the given period as the value on the Y axis. At the bottom is the Offset and Scale. </li> </ul>"},{"location":"tutorial/graphs/line/#understanding-data-processing-order","title":"Understanding Data Processing Order","text":"<p>The order of operations is as follows: </p> <ol> <li>First your data is converted to totals using the plot total setting</li> <li>Then each point is converted to its moving average using the moving average setting</li> <li>Then each point is multiplied by the scale value</li> <li>Finally the offset is added, shifting the entire line up or down on the Y axis</li> </ol>"},{"location":"tutorial/graphs/line/#plot-totals-and-moving-averages","title":"Plot totals and Moving averages","text":"<p>If for example you were to track when ever you exercise using only a value of 1 like so: </p> <p></p> <p>You would find when you came to draw a graph of that data that the line draws simply as a straight line at the point 1 on the Y axis: </p> <p></p> <p>What you are most likely interested in is how many times you exercised each day, week, or month. To draw this line instead change the plot total setting from \"Plot when tracked\" to for example \"Daily total\". This setting will take the total of all values tracked per day and plot that on the graph with one point at the end of each day.</p> <p></p> <p>This graph is quite precise but still far too noisy to really make sense of. The line mostly jumps between values of 1 and 0. However if you now change the moving average setting to weekly you can see something more helpful: </p> <p></p> <p>Don't forget the data is first converted to periodic totals and then a moving average of those totals.</p>"},{"location":"tutorial/graphs/line/#combining-multiple-data-series","title":"Combining Multiple Data Series","text":"<p>You can add multiple lines to the same graph to get a better overview of your data.</p> <p></p> <p></p>"},{"location":"tutorial/graphs/pie/","title":"Pie charts","text":"<p>Pie charts can be set up from the create graph or stat menu. The segments are simply one per label in the selected feature. </p> <p>The size of the segment is proportional to the number of data points with that label. </p> <p>By default the size of each segment is proportional to the sum of the values tracked for that label. You can change this behaviour by checking the box to count the number of data points rather than the total of their values.</p> <p></p>"},{"location":"tutorial/graphs/statistics/","title":"Statistics","text":"<p>Currently there are only a couple of built in supported statistics: \"Average time between\" and \"Last Tracked/Time since\". For more powerful statistics see Lua graphs</p> <p>Both present you with the following interface: </p> <p></p> <p>First select a data set and then optionally add filters for label and value range. For example if you want to know the average time between tracking \"Yes\" for /Daily/Rest you can add the label filter and select \"Yes\".</p> <p></p> <p>The statistics are calculated in the following ways:</p> <ul> <li>Average time between shows the duration between the first and last data point matching all filters in the feature divided by the number of data points matching all features minus 1 <code>(last-first)/(size - 1)</code></li> <li>Last Tracked/Time since last shows the last data point matching all filters and also the time since that data point was tracked</li> </ul> <p></p>"},{"location":"tutorial/graphs/lua-graphs/lua-graphs/","title":"Lua Graphs and Statistics","text":"<p>Lua graphs are more powerful and flexible than the other graph types. A lua graph is a script written in the lua programming language that returns a data structure that Track &amp; Graph can render. The lua graph can be configured with named data sources that the script can read from when it is executed. For example we could re-create the Last Tracked statistic by adding a single data source and then using this script:</p> <pre><code>return function(sources)\n  local _, first = next(sources)\n  if not first then\n    return nil\n  end\n  return {\n    type = require(\"tng.graph\").GRAPH_TYPE.DATA_POINT,\n    datapoint = first.dp(),\n  }\nend\n</code></pre> <p>Don't worry if that seems a bit complicated, there are many scripts already written for you over at the community script hub. </p> <p>If you would like to learn how to write your own scripts check out the developer guides.</p>"},{"location":"tutorial/graphs/lua-graphs/lua-graphs/#community-scripts","title":"Community Scripts","text":"<p>You can get directly there by tapping the \"GitHub\" button in the app. Once there if you find a script you want to use you can tap the \"Install via deeplink\" button and you will be returned to the app with the script already installed: </p> <p></p>"},{"location":"tutorial/graphs/lua-graphs/lua-graphs/#configuration","title":"Configuration","text":"<p>Most of the scripts have some configuration parameters near the top. Currently you will need to modify these manually to configure the script. Below is a guide for working with the different data types you'll encounter in Lua scripts.</p>"},{"location":"tutorial/graphs/lua-graphs/lua-graphs/#basic-data-types","title":"Basic Data Types","text":"<p>When configuring Lua scripts, you'll need to understand how to provide different types of values:</p>"},{"location":"tutorial/graphs/lua-graphs/lua-graphs/#numbers","title":"Numbers","text":"<pre><code>local number = 42           -- integers\nlocal decimal = 3.14        -- floating point numbers\nlocal negative = -10        -- negative numbers\n</code></pre>"},{"location":"tutorial/graphs/lua-graphs/lua-graphs/#strings","title":"Strings","text":"<pre><code>local string = \"Hello\"      -- double quotes\nlocal string2 = 'World'     -- single quotes work too\n</code></pre>"},{"location":"tutorial/graphs/lua-graphs/lua-graphs/#booleans","title":"Booleans","text":"<pre><code>local truth = true          -- true value\nlocal falsehood = false     -- false value\n</code></pre>"},{"location":"tutorial/graphs/lua-graphs/lua-graphs/#tableslists","title":"Tables/Lists","text":"<pre><code>local emptyList = {}                           -- empty list\nlocal numberList = {1, 2, 3, 4}                -- list of numbers\nlocal stringList = {\"small\", \"medium\"}         -- list of strings\nlocal colorList = {\"#FF0000\", core.COLOR.BLUE} -- list of colors\n</code></pre>"},{"location":"tutorial/graphs/lua-graphs/lua-graphs/#nil","title":"nil","text":"<pre><code>local nothing = nil         -- represents the absence of a value\n</code></pre>"},{"location":"tutorial/graphs/lua-graphs/lua-graphs/#comments","title":"Comments","text":"<pre><code>-- Anything after -- is a comment and will be ignored by the interpreter\n--[[\n  This is a multi-line comment\n  It can span multiple lines\n]]\n</code></pre>"},{"location":"tutorial/graphs/lua-graphs/lua-graphs/#durations","title":"Durations","text":"<p>A duration is just a number of milliseconds. There are constants defined for you for convenience:</p> <pre><code>core.DURATION.SECOND\ncore.DURATION.MINUTE\ncore.DURATION.HOUR\ncore.DURATION.DAY\ncore.DURATION.WEEK\n</code></pre> <p>It is also valid to perform arithmetic on a duration e.g.</p> <pre><code>(core.DURATION.MINUTE * 5 + 8 -2) / 3\n</code></pre>"},{"location":"tutorial/graphs/lua-graphs/lua-graphs/#periods","title":"Periods","text":"<p>A period is slightly different to a duration because it can have a variable number of milliseconds. For example a month does not have a fixed number of days, and a day may have a different number of hours due to daylight savings. The period constants defined are:</p> <pre><code>core.PERIOD.DAY\ncore.PERIOD.WEEK\ncore.PERIOD.MONTH\ncore.PERIOD.YEAR\n</code></pre> <p>It is not valid to use arithmetic operations on a period. For example <code>core.PERIOD.MONTH * 5</code> is not valid. For this reason a script that uses a period in the config will often accept a multiplier for that period as a separate parameter. So if you want to represent something like 5 months you might provide the following configuration.</p> <pre><code>local period = core.PERIOD.MONTH\nlocal period_multiplier = 5\n</code></pre>"},{"location":"tutorial/graphs/lua-graphs/lua-graphs/#colors","title":"Colors","text":"<p>For colors you can use any hex value such as <code>#FF0000</code> or <code>#00FF00</code> like so:</p> <pre><code>local color = \"#FF0000\"\n</code></pre> <p>You can also use the following named colors from Track &amp; Graph's default colour palette:</p> Constant Hex Value Color Sample <code>core.COLOR.RED_DARK</code> <code>#A50026</code> <code>core.COLOR.RED</code> <code>#D73027</code> <code>core.COLOR.ORANGE_DARK</code> <code>#F46D43</code> <code>core.COLOR.ORANGE</code> <code>#FDAE61</code> <code>core.COLOR.YELLOW</code> <code>#FEE090</code> <code>core.COLOR.BLUE_LIGHT</code> <code>#E0F3F8</code> <code>core.COLOR.BLUE_SKY</code> <code>#ABD9E9</code> <code>core.COLOR.BLUE</code> <code>#74ADD1</code> <code>core.COLOR.BLUE_DARK</code> <code>#4575B4</code> <code>core.COLOR.BLUE_NAVY</code> <code>#313695</code> <code>core.COLOR.GREEN_LIGHT</code> <code>#54D931</code> <code>core.COLOR.GREEN_DARK</code> <code>#1B8200</code>"}]}