return {
  functions={
    {
      id="distinct-until-changed-label",
      script="-- Lua Function to filter out consecutive duplicate labels\n-- Only passes through data points when the label changes from the previous one\n\nreturn {\n    -- Configuration metadata\n    id = \"distinct-until-changed-label\",\n    version = \"1.0.0\",\n    inputCount = 1,\n    title = {\n        [\"en\"] = \"Distinct Until Changed (Label)\",\n        [\"de\"] = \"Eindeutig bis geändert (Label)\",\n        [\"es\"] = \"Distinto hasta cambio (Etiqueta)\",\n        [\"fr\"] = \"Distinct jusqu'au changement (Étiquette)\",\n    },\n    description = {\n        [\"en\"] = \"Filters out consecutive duplicate labels. Only data points where the label differs from the previous one will pass through.\",\n        [\"de\"] = \"Filtert aufeinanderfolgende doppelte Labels heraus. Nur Datenpunkte, bei denen sich das Label vom vorherigen unterscheidet, werden durchgelassen.\",\n        [\"es\"] = \"Filtra etiquetas duplicadas consecutivas. Solo los puntos de datos donde la etiqueta difiere de la anterior pasarán.\",\n        [\"fr\"] = \"Filtre les étiquettes en double consécutives. Seuls les points de données où l'étiquette diffère de la précédente passeront.\",\n    },\n    config = {},\n\n    -- Generator function\n    generator = function(source, config)\n        local last_label = nil\n\n        return function()\n            while true do\n                local data_point = source.dp()\n                if not data_point then\n                    return nil\n                end\n\n                local current_label = data_point.label\n                if current_label ~= last_label then\n                    last_label = current_label\n                    return data_point\n                end\n            end\n        end\n    end,\n}\n",
      version="1.0.0"
    },
    {
      id="distinct-until-changed-note",
      script="-- Lua Function to filter out consecutive duplicate notes\n-- Only passes through data points when the note changes from the previous one\n\nreturn {\n    -- Configuration metadata\n    id = \"distinct-until-changed-note\",\n    version = \"1.0.0\",\n    inputCount = 1,\n    title = {\n        [\"en\"] = \"Distinct Until Changed (Note)\",\n        [\"de\"] = \"Eindeutig bis geändert (Notiz)\",\n        [\"es\"] = \"Distinto hasta cambio (Nota)\",\n        [\"fr\"] = \"Distinct jusqu'au changement (Note)\",\n    },\n    description = {\n        [\"en\"] = \"Filters out consecutive duplicate notes. Only data points where the note differs from the previous one will pass through.\",\n        [\"de\"] = \"Filtert aufeinanderfolgende doppelte Notizen heraus. Nur Datenpunkte, bei denen sich die Notiz von der vorherigen unterscheidet, werden durchgelassen.\",\n        [\"es\"] = \"Filtra notas duplicadas consecutivas. Solo los puntos de datos donde la nota difiere de la anterior pasarán.\",\n        [\"fr\"] = \"Filtre les notes en double consécutives. Seuls les points de données où la note diffère de la précédente passeront.\",\n    },\n    config = {},\n\n    -- Generator function\n    generator = function(source, config)\n        local last_note = nil\n\n        return function()\n            while true do\n                local data_point = source.dp()\n                if not data_point then\n                    return nil\n                end\n\n                local current_note = data_point.note\n                if current_note ~= last_note then\n                    last_note = current_note\n                    return data_point\n                end\n            end\n        end\n    end,\n}\n",
      version="1.0.0"
    },
    {
      id="distinct-until-changed-value",
      script="-- Lua Function to filter out consecutive duplicate values\n-- Only passes through data points when the value changes from the previous one\n\nreturn {\n    -- Configuration metadata\n    id = \"distinct-until-changed-value\",\n    version = \"1.0.0\",\n    inputCount = 1,\n    title = {\n        [\"en\"] = \"Distinct Until Changed (Value)\",\n        [\"de\"] = \"Eindeutig bis geändert (Wert)\",\n        [\"es\"] = \"Distinto hasta cambio (Valor)\",\n        [\"fr\"] = \"Distinct jusqu'au changement (Valeur)\",\n    },\n    description = {\n        [\"en\"] = \"Filters out consecutive duplicate values. Only data points where the value differs from the previous one will pass through.\",\n        [\"de\"] = \"Filtert aufeinanderfolgende doppelte Werte heraus. Nur Datenpunkte, bei denen sich der Wert vom vorherigen unterscheidet, werden durchgelassen.\",\n        [\"es\"] = \"Filtra valores duplicados consecutivos. Solo los puntos de datos donde el valor difiere del anterior pasarán.\",\n        [\"fr\"] = \"Filtre les valeurs en double consécutives. Seuls les points de données où la valeur diffère de la précédente passeront.\",\n    },\n    config = {},\n\n    -- Generator function\n    generator = function(source, config)\n        local last_value = nil\n\n        return function()\n            while true do\n                local data_point = source.dp()\n                if not data_point then\n                    return nil\n                end\n\n                local current_value = data_point.value\n                if current_value ~= last_value then\n                    last_value = current_value\n                    return data_point\n                end\n            end\n        end\n    end,\n}\n",
      version="1.0.0"
    },
    {
      id="divide",
      script="-- Lua Function to divide data point values by a configurable number\n-- This function divides all incoming data point values by a specified divisor\n\nreturn {\n    -- Configuration metadata\n    id = \"divide\",\n    version = \"1.0.0\",\n    inputCount = 1,\n    title = {\n        [\"en\"] = \"Divide Values\",\n        [\"de\"] = \"Werte dividieren\",\n        [\"es\"] = \"Dividir Valores\",\n        [\"fr\"] = \"Diviser les Valeurs\"\n    },\n    description = {\n        [\"en\"] = [[Divides all incoming data point values by a specified divisor.\n\nConfiguration:\n• Divisor: The number to divide all values by (default: 1.0)]],\n        [\"de\"] = [[Dividiert alle eingehenden Datenpunktwerte durch einen bestimmten Divisor.\n\nKonfiguration:\n• Divisor: Die Zahl, durch die alle Werte dividiert werden (Standard: 1.0)]],\n        [\"es\"] = [[Divide todos los valores de puntos de datos entrantes por un divisor especificado.\n\nConfiguración:\n• Divisor: El número por el cual dividir todos los valores (predeterminado: 1.0)]],\n        [\"fr\"] = [[Divise toutes les valeurs de points de données entrantes par un diviseur spécifié.\n\nConfiguration:\n• Diviseur: Le nombre par lequel diviser toutes les valeurs (par défaut: 1.0)]]\n    },\n    config = {\n        {\n            id = \"divisor\",\n            type = \"number\",\n            default = 1.0,\n            name = {\n                [\"en\"] = \"Divisor\",\n                [\"de\"] = \"Divisor\",\n                [\"es\"] = \"Divisor\",\n                [\"fr\"] = \"Diviseur\"\n            }\n        }\n    },\n\n    -- Generator function\n    generator = function(source, config)\n        local divisor = config and config.divisor or 1.0\n\n        return function()\n            local data_point = source.dp()\n            if not data_point then return nil end\n\n            data_point.value = data_point.value / divisor\n\n            return data_point\n        end\n    end\n}\n",
      version="1.0.0"
    },
    {
      id="filter-by-label",
      script="-- Example Lua Function with Input Count and Configuration\n-- This function filters data points by label\n\nlocal function match(data_point, filter_label, case_sensitive, match_exactly)\n    if filter_label == nil then\n        return true\n    end\n\n    local data_label = data_point.label\n    if not data_label then return false end\n\n    -- Apply case sensitivity\n    if not case_sensitive then\n        data_label = string.lower(data_label)\n        filter_label = string.lower(filter_label)\n    end\n\n    -- Apply matching mode\n    if match_exactly then\n        return data_label == filter_label\n    else\n        return string.find(data_label, filter_label, 1, true) ~= nil\n    end\nend\n\n\nreturn {\n    -- Configuration metadata\n    id = \"filter-by-label\",\n    version = \"1.0.0\",\n    inputCount = 1,\n    title = {\n        [\"en\"] = \"Filter by Label\",\n        [\"de\"] = \"Filtern nach Etikett\",\n        [\"es\"] = \"Filtrar por Etiqueta\",\n        [\"fr\"] = \"Filtrer par Étiquette\"\n    },\n    description = {\n        [\"en\"] = [[Filters data points by their label field. Only data points matching the filter criteria will pass through.\n\nConfiguration:\n• Filter Label: The text to search for in labels\n• Case Sensitive: Match case exactly (default: false)\n• Match Exactly: Require exact match instead of substring (default: false)\n• Invert: Keep data points that DON'T match instead (default: false)]],\n        [\"de\"] = [[Filtert Datenpunkte nach ihrem Label-Feld. Nur Datenpunkte, die den Filterkriterien entsprechen, werden durchgelassen.\n\nKonfiguration:\n• Filter-Label: Der Text, nach dem in Labels gesucht werden soll\n• Groß-/Kleinschreibung beachten: Groß-/Kleinschreibung exakt beachten (Standard: false)\n• Exakt übereinstimmen: Exakte Übereinstimmung statt Teilstring erforderlich (Standard: false)\n• Invertieren: Datenpunkte behalten, die NICHT übereinstimmen (Standard: false)]],\n        [\"es\"] = [[Filtra puntos de datos por su campo de etiqueta. Solo los puntos de datos que coincidan con los criterios del filtro pasarán.\n\nConfiguración:\n• Filtrar Etiqueta: El texto a buscar en las etiquetas\n• Sensible a Mayúsculas: Coincidir exactamente con mayúsculas y minúsculas (predeterminado: false)\n• Coincidir Exactamente: Requerir coincidencia exacta en lugar de subcadena (predeterminado: false)\n• Invertir: Mantener puntos de datos que NO coincidan (predeterminado: false)]],\n        [\"fr\"] = [[Filtre les points de données par leur champ d'étiquette. Seuls les points de données correspondant aux critères du filtre passeront.\n\nConfiguration:\n• Filtrer l'Étiquette: Le texte à rechercher dans les étiquettes\n• Sensible à la Casse: Correspondance exacte de la casse (par défaut: false)\n• Correspondance Exacte: Nécessite une correspondance exacte au lieu d'une sous-chaîne (par défaut: false)\n• Inverser: Conserver les points de données qui NE correspondent PAS (par défaut: false)]]\n    },\n    config = {\n        {\n            id = \"filter_label\",\n            type = \"text\",\n            name = {\n                [\"en\"] = \"Filter Label\",\n                [\"de\"] = \"Filter-Label\",\n                [\"es\"] = \"Filtrar Etiqueta\",\n                [\"fr\"] = \"Filtrer l'Étiquette\"\n            }\n        },\n        {\n            id = \"case_sensitive\",\n            type = \"checkbox\",\n            name = {\n                [\"en\"] = \"Case Sensitive\",\n                [\"de\"] = \"Groß-/Kleinschreibung beachten\",\n                [\"es\"] = \"Sensible a Mayúsculas\",\n                [\"fr\"] = \"Sensible à la Casse\"\n            }\n        },\n        {\n            id = \"match_exactly\",\n            type = \"checkbox\",\n            name = {\n                [\"en\"] = \"Match Exactly\",\n                [\"de\"] = \"Exakt übereinstimmen\",\n                [\"es\"] = \"Coincidir Exactamente\",\n                [\"fr\"] = \"Correspondance Exacte\"\n            }\n        },\n        {\n            id = \"invert\",\n            type = \"checkbox\",\n            name = {\n                [\"en\"] = \"Invert\",\n                [\"de\"] = \"Invertieren\",\n                [\"es\"] = \"Invertir\",\n                [\"fr\"] = \"Inverser\"\n            }\n        }\n    },\n\n    -- Generator function\n    generator = function(source, config)\n        local filter_label = config and config.filter_label\n        local case_sensitive = config and config.case_sensitive or false\n        local match_exactly = config and config.match_exactly or false\n        local invert = config and config.invert or false\n\n        return function()\n            local data_point = source.dp()\n            local should_match = not invert\n            while data_point and (match(data_point, filter_label, case_sensitive, match_exactly) ~= should_match) do\n                data_point = source.dp()\n            end\n            return data_point\n        end\n    end\n}\n",
      version="1.0.0"
    },
    {
      id="filter-by-note",
      script="-- Lua Function to filter data points by note\n-- This function filters data points by note\n\nlocal function match(data_point, filter_note, case_sensitive, match_exactly)\n    if filter_note == nil then\n        return true\n    end\n\n    local data_note = data_point.note\n    if not data_note then return false end\n\n    -- Apply case sensitivity\n    if not case_sensitive then\n        data_note = string.lower(data_note)\n        filter_note = string.lower(filter_note)\n    end\n\n    -- Apply matching mode\n    if match_exactly then\n        return data_note == filter_note\n    else\n        return string.find(data_note, filter_note, 1, true) ~= nil\n    end\nend\n\n\nreturn {\n    -- Configuration metadata\n    id = \"filter-by-note\",\n    version = \"1.0.0\",\n    inputCount = 1,\n    title = {\n        [\"en\"] = \"Filter by Note\",\n        [\"de\"] = \"Filtern nach Notiz\",\n        [\"es\"] = \"Filtrar por Nota\",\n        [\"fr\"] = \"Filtrer par Note\"\n    },\n    description = {\n        [\"en\"] = [[Filters data points by their note field. Only data points matching the filter criteria will pass through.\n\nConfiguration:\n• Filter Note: The text to search for in notes\n• Case Sensitive: Match case exactly (default: false)\n• Match Exactly: Require exact match instead of substring (default: false)\n• Invert: Keep data points that DON'T match instead (default: false)]],\n        [\"de\"] = [[Filtert Datenpunkte nach ihrem Notiz-Feld. Nur Datenpunkte, die den Filterkriterien entsprechen, werden durchgelassen.\n\nKonfiguration:\n• Filter-Notiz: Der Text, nach dem in Notizen gesucht werden soll\n• Groß-/Kleinschreibung beachten: Groß-/Kleinschreibung exakt beachten (Standard: false)\n• Exakt übereinstimmen: Exakte Übereinstimmung statt Teilstring erforderlich (Standard: false)\n• Invertieren: Datenpunkte behalten, die NICHT übereinstimmen (Standard: false)]],\n        [\"es\"] = [[Filtra puntos de datos por su campo de nota. Solo los puntos de datos que coincidan con los criterios del filtro pasarán.\n\nConfiguración:\n• Filtrar Nota: El texto a buscar en las notas\n• Sensible a Mayúsculas: Coincidir exactamente con mayúsculas y minúsculas (predeterminado: false)\n• Coincidir Exactamente: Requerir coincidencia exacta en lugar de subcadena (predeterminado: false)\n• Invertir: Mantener puntos de datos que NO coincidan (predeterminado: false)]],\n        [\"fr\"] = [[Filtre les points de données par leur champ de note. Seuls les points de données correspondant aux critères du filtre passeront.\n\nConfiguration:\n• Filtrer la Note: Le texte à rechercher dans les notes\n• Sensible à la Casse: Correspondance exacte de la casse (par défaut: false)\n• Correspondance Exacte: Nécessite une correspondance exacte au lieu d'une sous-chaîne (par défaut: false)\n• Inverser: Conserver les points de données qui NE correspondent PAS (par défaut: false)]]\n    },\n    config = {\n        {\n            id = \"filter_note\",\n            type = \"text\",\n            name = {\n                [\"en\"] = \"Filter Note\",\n                [\"de\"] = \"Filter-Notiz\",\n                [\"es\"] = \"Filtrar Nota\",\n                [\"fr\"] = \"Filtrer la Note\"\n            }\n        },\n        {\n            id = \"case_sensitive\",\n            type = \"checkbox\",\n            name = {\n                [\"en\"] = \"Case Sensitive\",\n                [\"de\"] = \"Groß-/Kleinschreibung beachten\",\n                [\"es\"] = \"Sensible a Mayúsculas\",\n                [\"fr\"] = \"Sensible à la Casse\"\n            }\n        },\n        {\n            id = \"match_exactly\",\n            type = \"checkbox\",\n            name = {\n                [\"en\"] = \"Match Exactly\",\n                [\"de\"] = \"Exakt übereinstimmen\",\n                [\"es\"] = \"Coincidir Exactamente\",\n                [\"fr\"] = \"Correspondance Exacte\"\n            }\n        },\n        {\n            id = \"invert\",\n            type = \"checkbox\",\n            name = {\n                [\"en\"] = \"Invert\",\n                [\"de\"] = \"Invertieren\",\n                [\"es\"] = \"Invertir\",\n                [\"fr\"] = \"Inverser\"\n            }\n        }\n    },\n\n    -- Generator function\n    generator = function(source, config)\n        local filter_note = config and config.filter_note\n        local case_sensitive = config and config.case_sensitive or false\n        local match_exactly = config and config.match_exactly or false\n        local invert = config and config.invert or false\n\n        return function()\n            local data_point = source.dp()\n            local should_match = not invert\n            while data_point and (match(data_point, filter_note, case_sensitive, match_exactly) ~= should_match) do\n                data_point = source.dp()\n            end\n            return data_point\n        end\n    end\n}\n",
      version="1.0.0"
    },
    {
      id="filter-greater-than",
      script="-- Lua Function to filter data points by value (greater than threshold)\n-- Only passes through data points with values greater than a threshold\n\nreturn {\n    -- Configuration metadata\n    id = \"filter-greater-than\",\n    version = \"1.0.0\",\n    inputCount = 1,\n    title = {\n        [\"en\"] = \"Filter Greater Than\",\n        [\"de\"] = \"Filtern größer als\",\n        [\"es\"] = \"Filtrar mayor que\",\n        [\"fr\"] = \"Filtrer supérieur à\",\n    },\n    description = {\n        [\"en\"] = [[Filters data points by value. Only data points with values greater than the threshold will pass through.\n\nConfiguration:\n• Threshold: The minimum value (exclusive by default)\n• Include Equal: Also include values equal to the threshold (default: false)]],\n        [\"de\"] = [[Filtert Datenpunkte nach Wert. Nur Datenpunkte mit Werten größer als der Schwellenwert werden durchgelassen.\n\nKonfiguration:\n• Schwellenwert: Der Mindestwert (standardmäßig exklusiv)\n• Gleich einschließen: Werte gleich dem Schwellenwert auch einschließen (Standard: false)]],\n        [\"es\"] = [[Filtra puntos de datos por valor. Solo los puntos de datos con valores mayores que el umbral pasarán.\n\nConfiguración:\n• Umbral: El valor mínimo (exclusivo por defecto)\n• Incluir igual: También incluir valores iguales al umbral (predeterminado: false)]],\n        [\"fr\"] = [[Filtre les points de données par valeur. Seuls les points de données avec des valeurs supérieures au seuil passeront.\n\nConfiguration:\n• Seuil: La valeur minimale (exclusive par défaut)\n• Inclure égal: Inclure également les valeurs égales au seuil (par défaut: false)]],\n    },\n    config = {\n        {\n            id = \"threshold\",\n            type = \"number\",\n            name = {\n                [\"en\"] = \"Threshold\",\n                [\"de\"] = \"Schwellenwert\",\n                [\"es\"] = \"Umbral\",\n                [\"fr\"] = \"Seuil\",\n            },\n        },\n        {\n            id = \"include_equal\",\n            type = \"checkbox\",\n            name = {\n                [\"en\"] = \"Include Equal\",\n                [\"de\"] = \"Gleich einschließen\",\n                [\"es\"] = \"Incluir igual\",\n                [\"fr\"] = \"Inclure égal\",\n            },\n        },\n    },\n\n    -- Generator function\n    generator = function(source, config)\n        local threshold = config and config.threshold or 0.0\n        local include_equal = config and config.include_equal or false\n\n        return function()\n            while true do\n                local data_point = source.dp()\n                if not data_point then\n                    return nil\n                end\n\n                local passes\n                if include_equal then\n                    passes = data_point.value >= threshold\n                else\n                    passes = data_point.value > threshold\n                end\n\n                if passes then\n                    return data_point\n                end\n            end\n        end\n    end,\n}\n",
      version="1.0.0"
    },
    {
      id="filter-less-than",
      script="-- Lua Function to filter data points by value (less than threshold)\n-- Only passes through data points with values less than a threshold\n\nreturn {\n    -- Configuration metadata\n    id = \"filter-less-than\",\n    version = \"1.0.0\",\n    inputCount = 1,\n    title = {\n        [\"en\"] = \"Filter Less Than\",\n        [\"de\"] = \"Filtern kleiner als\",\n        [\"es\"] = \"Filtrar menor que\",\n        [\"fr\"] = \"Filtrer inférieur à\",\n    },\n    description = {\n        [\"en\"] = [[Filters data points by value. Only data points with values less than the threshold will pass through.\n\nConfiguration:\n• Threshold: The maximum value (exclusive by default)\n• Include Equal: Also include values equal to the threshold (default: false)]],\n        [\"de\"] = [[Filtert Datenpunkte nach Wert. Nur Datenpunkte mit Werten kleiner als der Schwellenwert werden durchgelassen.\n\nKonfiguration:\n• Schwellenwert: Der Maximalwert (standardmäßig exklusiv)\n• Gleich einschließen: Werte gleich dem Schwellenwert auch einschließen (Standard: false)]],\n        [\"es\"] = [[Filtra puntos de datos por valor. Solo los puntos de datos con valores menores que el umbral pasarán.\n\nConfiguración:\n• Umbral: El valor máximo (exclusivo por defecto)\n• Incluir igual: También incluir valores iguales al umbral (predeterminado: false)]],\n        [\"fr\"] = [[Filtre les points de données par valeur. Seuls les points de données avec des valeurs inférieures au seuil passeront.\n\nConfiguration:\n• Seuil: La valeur maximale (exclusive par défaut)\n• Inclure égal: Inclure également les valeurs égales au seuil (par défaut: false)]],\n    },\n    config = {\n        {\n            id = \"threshold\",\n            type = \"number\",\n            name = {\n                [\"en\"] = \"Threshold\",\n                [\"de\"] = \"Schwellenwert\",\n                [\"es\"] = \"Umbral\",\n                [\"fr\"] = \"Seuil\",\n            },\n        },\n        {\n            id = \"include_equal\",\n            type = \"checkbox\",\n            name = {\n                [\"en\"] = \"Include Equal\",\n                [\"de\"] = \"Gleich einschließen\",\n                [\"es\"] = \"Incluir igual\",\n                [\"fr\"] = \"Inclure égal\",\n            },\n        },\n    },\n\n    -- Generator function\n    generator = function(source, config)\n        local threshold = config and config.threshold or 0.0\n        local include_equal = config and config.include_equal or false\n\n        return function()\n            while true do\n                local data_point = source.dp()\n                if not data_point then\n                    return nil\n                end\n\n                local passes\n                if include_equal then\n                    passes = data_point.value <= threshold\n                else\n                    passes = data_point.value < threshold\n                end\n\n                if passes then\n                    return data_point\n                end\n            end\n        end\n    end,\n}\n",
      version="1.0.0"
    },
    {
      id="multiply",
      script="-- Lua Function to multiply data point values by a configurable number\n-- This function multiplies all incoming data point values by a specified multiplier\n\nreturn {\n    -- Configuration metadata\n    id = \"multiply\",\n    version = \"1.0.0\",\n    inputCount = 1,\n    title = {\n        [\"en\"] = \"Multiply Values\",\n        [\"de\"] = \"Werte multiplizieren\",\n        [\"es\"] = \"Multiplicar Valores\",\n        [\"fr\"] = \"Multiplier les Valeurs\"\n    },\n    description = {\n        [\"en\"] = [[Multiplies all incoming data point values by a specified multiplier.\n\nConfiguration:\n• Multiplier: The number to multiply all values by (default: 1.0)]],\n        [\"de\"] = [[Multipliziert alle eingehenden Datenpunktwerte mit einem bestimmten Multiplikator.\n\nKonfiguration:\n• Multiplikator: Die Zahl, mit der alle Werte multipliziert werden (Standard: 1.0)]],\n        [\"es\"] = [[Multiplica todos los valores de puntos de datos entrantes por un multiplicador especificado.\n\nConfiguración:\n• Multiplicador: El número por el cual multiplicar todos los valores (predeterminado: 1.0)]],\n        [\"fr\"] = [[Multiplie toutes les valeurs de points de données entrantes par un multiplicateur spécifié.\n\nConfiguration:\n• Multiplicateur: Le nombre par lequel multiplier toutes les valeurs (par défaut: 1.0)]]\n    },\n    config = {\n        {\n            id = \"multiplier\",\n            type = \"number\",\n            name = {\n                [\"en\"] = \"Multiplier\",\n                [\"de\"] = \"Multiplikator\",\n                [\"es\"] = \"Multiplicador\",\n                [\"fr\"] = \"Multiplicateur\"\n            }\n        }\n    },\n\n    -- Generator function\n    generator = function(source, config)\n        local multiplier = config and config.multiplier or 1.0\n\n        return function()\n            local data_point = source.dp()\n            if not data_point then return nil end\n\n            data_point.value = data_point.value * multiplier\n\n            return data_point\n        end\n    end\n}\n",
      version="1.0.0"
    },
    {
      id="offset-value",
      script="-- Lua Function to offset data point values by a configurable number\n-- This function adds a constant offset to all incoming data point values\n\nreturn {\n    -- Configuration metadata\n    id = \"offset-value\",\n    version = \"1.0.0\",\n    inputCount = 1,\n    title = {\n        [\"en\"] = \"Offset Value\",\n        [\"de\"] = \"Wert verschieben\",\n        [\"es\"] = \"Desplazar Valor\",\n        [\"fr\"] = \"Décaler la Valeur\"\n    },\n    description = {\n        [\"en\"] = [[Adds a constant offset to all incoming data point values.\n\nConfiguration:\n• Offset: The number to add to all values (default: 0.0). Use negative values to subtract.]],\n        [\"de\"] = [[Fügt allen eingehenden Datenpunktwerten einen konstanten Offset hinzu.\n\nKonfiguration:\n• Offset: Die Zahl, die zu allen Werten addiert wird (Standard: 0.0). Verwenden Sie negative Werte zum Subtrahieren.]],\n        [\"es\"] = [[Añade un desplazamiento constante a todos los valores de puntos de datos entrantes.\n\nConfiguración:\n• Desplazamiento: El número a añadir a todos los valores (predeterminado: 0.0). Use valores negativos para restar.]],\n        [\"fr\"] = [[Ajoute un décalage constant à toutes les valeurs de points de données entrantes.\n\nConfiguration:\n• Décalage: Le nombre à ajouter à toutes les valeurs (par défaut: 0.0). Utilisez des valeurs négatives pour soustraire.]]\n    },\n    config = {\n        {\n            id = \"offset\",\n            type = \"number\",\n            default = 0.0,\n            name = {\n                [\"en\"] = \"Offset\",\n                [\"de\"] = \"Offset\",\n                [\"es\"] = \"Desplazamiento\",\n                [\"fr\"] = \"Décalage\"\n            }\n        }\n    },\n\n    -- Generator function\n    generator = function(source, config)\n        local offset = config and config.offset or 0.0\n\n        return function()\n            local data_point = source.dp()\n            if not data_point then return nil end\n\n            data_point.value = data_point.value + offset\n\n            return data_point\n        end\n    end\n}\n",
      version="1.0.0"
    },
    {
      id="override-label",
      script="-- Lua Function to override the label of all data points with a configurable string\n-- This function sets all incoming data point labels to a specified value\n\nreturn {\n    -- Configuration metadata\n    id = \"override-label\",\n    version = \"1.0.0\",\n    inputCount = 1,\n    title = {\n        [\"en\"] = \"Override Label\",\n        [\"de\"] = \"Label überschreiben\",\n        [\"es\"] = \"Sobrescribir Etiqueta\",\n        [\"fr\"] = \"Remplacer l'Étiquette\",\n    },\n    description = {\n        [\"en\"] = \"Sets all incoming data point labels to a specified value\",\n        [\"de\"] = \"Setzt alle eingehenden Datenpunkt-Labels auf einen bestimmten Wert\",\n        [\"es\"] = \"Establece todas las etiquetas de puntos de datos entrantes en un valor especificado\",\n        [\"fr\"] = \"Définit toutes les étiquettes de points de données entrantes sur une valeur spécifiée\",\n    },\n    config = {\n        {\n            id = \"new_label\",\n            type = \"text\",\n            name = {\n                [\"en\"] = \"New Label\",\n                [\"de\"] = \"Neues Label\",\n                [\"es\"] = \"Nueva Etiqueta\",\n                [\"fr\"] = \"Nouvelle Étiquette\",\n            },\n        },\n    },\n\n    -- Generator function\n    generator = function(source, config)\n        local new_label = config and config.new_label\n\n        return function()\n            local data_point = source.dp()\n            if not data_point then\n                return nil\n            end\n\n            if not new_label then\n                return data_point\n            end\n            data_point.label = new_label\n\n            return data_point\n        end\n    end,\n}\n",
      version="1.0.0"
    },
    {
      id="override-note",
      script="-- Lua Function to override the note of all data points with a configurable string\n-- This function sets all incoming data point notes to a specified value\n\nreturn {\n    -- Configuration metadata\n    id = \"override-note\",\n    version = \"1.0.0\",\n    inputCount = 1,\n    title = {\n        [\"en\"] = \"Override Note\",\n        [\"de\"] = \"Notiz überschreiben\",\n        [\"es\"] = \"Sobrescribir Nota\",\n        [\"fr\"] = \"Remplacer la Note\",\n    },\n    description = {\n        [\"en\"] = \"Sets all incoming data point notes to a specified value\",\n        [\"de\"] = \"Setzt alle eingehenden Datenpunkt-Notizen auf einen bestimmten Wert\",\n        [\"es\"] = \"Establece todas las notas de puntos de datos entrantes en un valor especificado\",\n        [\"fr\"] = \"Définit toutes les notes de points de données entrantes sur une valeur spécifiée\",\n    },\n    config = {\n        {\n            id = \"new_note\",\n            type = \"text\",\n            name = {\n                [\"en\"] = \"New Note\",\n                [\"de\"] = \"Neue Notiz\",\n                [\"es\"] = \"Nueva Nota\",\n                [\"fr\"] = \"Nouvelle Note\",\n            },\n        },\n    },\n\n    -- Generator function\n    generator = function(source, config)\n        local new_note = config and config.new_note\n\n        return function()\n            local data_point = source.dp()\n            if not data_point then\n                return nil\n            end\n\n            if not new_note then\n                return data_point\n            end\n            data_point.note = new_note\n\n            return data_point\n        end\n    end,\n}\n",
      version="1.0.0"
    },
    {
      id="override-value",
      script="-- Lua Function to override the value of all data points with a configurable number\n-- This function sets all incoming data point values to a specified value\n\nreturn {\n    -- Configuration metadata\n    id = \"override-value\",\n    version = \"1.0.0\",\n    inputCount = 1,\n    title = {\n        [\"en\"] = \"Override Value\",\n        [\"de\"] = \"Wert überschreiben\",\n        [\"es\"] = \"Sobrescribir Valor\",\n        [\"fr\"] = \"Remplacer la Valeur\",\n    },\n    description = {\n        [\"en\"] = \"Sets all incoming data point values to a specified value\",\n        [\"de\"] = \"Setzt alle eingehenden Datenpunktwerte auf einen bestimmten Wert\",\n        [\"es\"] = \"Establece todos los valores de puntos de datos entrantes en un valor especificado\",\n        [\"fr\"] = \"Définit toutes les valeurs de points de données entrantes sur une valeur spécifiée\",\n    },\n    config = {\n        {\n            id = \"new_value\",\n            type = \"number\",\n            name = {\n                [\"en\"] = \"New Value\",\n                [\"de\"] = \"Neuer Wert\",\n                [\"es\"] = \"Nuevo Valor\",\n                [\"fr\"] = \"Nouvelle Valeur\",\n            },\n        },\n    },\n\n    -- Generator function\n    generator = function(source, config)\n        local new_value = config and config.new_value\n\n        return function()\n            local data_point = source.dp()\n            if not data_point then\n                return nil\n            end\n\n            if not new_value then\n                return data_point\n            end\n            data_point.value = new_value\n\n            return data_point\n        end\n    end,\n}\n",
      version="1.0.0"
    }
  },
  published_at="2025-10-14T22:29:18Z"
}